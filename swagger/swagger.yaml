openapi: "3.0.0"
info:
  version: 1.0.0
  title: BookLibrary
  description: |
    books available for loan
  license:
    name: MIT
servers:
  - url: http://localhost:4000
paths:
  /books:
    get:
      summary: Lists all Books
      operationId: listBooks
      tags:
        - books
      responses:
        "200":
          description: Array of books
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBooks"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /books/:
    post:
      summary: Create a Book
      operationId: createBook
      tags:
        - books
      requestBody:
        description: the book to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
            example:
              ISBN: 978-0-321-87758-1
              title: Essential C#5.0
              author: Andreas Johansson
              price: 59.99
              sellerEmail: someone@someplace.com
              used: true
              location:
                city: Redmond
                street: 156TH AVE NE
      responses:
        "201":
          description: The created book
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBook"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /books/{_id}:
    get:
      summary: Get a Book by uuid
      operationId: getBook
      tags:
        - books
      parameters:
        - name: _id
          in: path
          description: book _id
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The found book
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBook"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a Book
      operationId: deleteBook
      tags:
        - books
      parameters:
        - name: _id
          in: path
          description: book _id
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The deleted book
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBook"
        "204":
          description: No change (nothing was deleted)
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
  /books/?author={author}:
    get:
      summary: Get all Book from author
      operationId: getBookbyAuthor
      tags:
        - books
      parameters:
        - name: author
          in: path
          description: book author
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: The found books
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBooks"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /books/{_id}:
    put:
      summary: Update a Book
      operationId: updateBook
      tags:
        - books
      parameters:
        - name: _id
          in: path
          description: book _id
          required: true
          schema:
            type: string
            format: string
      requestBody:
        description: the book to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
      responses:
        "201":
          description: The updated book
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseBook"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Book: # A single book
      type: object
      properties:
        isbn:
          type: string
        title:
          type: string
        author:
          type: string
        price:
          type: integer
        selleremail:
          type: string
        used:
          type: string
        location:
          properties:
            city:
              type: string
            street:
              type: string
    # Add properties for your books here
    ResponseBook: #Single book response including _id and __v
      allOf:
        - $ref: "#/components/schemas/Book"
        - properties:
            __v:
              type: integer
              format: uint32
            _id:
              type: string
              format: uuid
    ResponseBooks: #list of books
      type: array
      items:
        $ref: "#/components/schemas/ResponseBook"
    Error:
      required:
        - error
      properties:
        error:
          type: object
          properties:
            expose:
              type: boolean
            statusCode:
              type: integer
              format: uint32
            status:
              type: integer
              format: uint32
            body:
              title: body as escaped json
              type: string
            type:
              title: fault desciption
              type: string
